"use strict";(self.webpackChunk_rjsf_docs=self.webpackChunk_rjsf_docs||[]).push([[3964],{1184:(e,t,a)=>{a.d(t,{R:()=>n,x:()=>o});var i=a(4041);const r={},s=i.createContext(r);function n(e){const t=i.useContext(s);return i.useMemo(function(){return"function"==typeof e?e(t):{...t,...e}},[t,e])}function o(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:n(e.components),i.createElement(s.Provider,{value:t},e.children)}},6334:(e,t,a)=>{a.r(t),a.d(t,{assets:()=>d,contentTitle:()=>o,default:()=>h,frontMatter:()=>n,metadata:()=>i,toc:()=>c});const i=JSON.parse('{"id":"api-reference/validator-ajv8","title":"@rjsf/validator-ajv8 APIs","description":"In RJSF version 5, the original, embedded AJV 6 validator implementation from earlier versions was extracted into its own package, @rjsf/validator-ajv6, which was immediately deprecated since AJV 6 is no longer getting maintenance updates.","source":"@site/versioned_docs/version-5.24.10/api-reference/validator-ajv8.md","sourceDirName":"api-reference","slug":"/api-reference/validator-ajv8","permalink":"/react-jsonschema-form/docs/version-5.24.10/api-reference/validator-ajv8","draft":false,"unlisted":false,"editUrl":"https://github.com/rjsf-team/react-jsonschema-form/tree/main/packages/docs/versioned_docs/version-5.24.10/api-reference/validator-ajv8.md","tags":[],"version":"5.24.10","frontMatter":{},"sidebar":"docs","previous":{"title":"RJSF utility functions, constants and types","permalink":"/react-jsonschema-form/docs/version-5.24.10/api-reference/utility-functions"},"next":{"title":"Contributing","permalink":"/react-jsonschema-form/docs/version-5.24.10/contributing"}}');var r=a(1085),s=a(1184);const n={},o="@rjsf/validator-ajv8 APIs",d={},c=[{value:"Types",id:"types",level:2},{value:"APIs",id:"apis",level:2},{value:"customizeValidator&lt;T = any, S extends StrictRJSFSchema = RJSFSchema, F extends FormContextType = any&gt;()",id:"customizevalidatort--any-s-extends-strictrjsfschema--rjsfschema-f-extends-formcontexttype--any",level:3},{value:"Parameters",id:"parameters",level:4},{value:"Returns",id:"returns",level:4},{value:"compileSchemaValidators&lt;S extends StrictRJSFSchema = RJSFSchema&gt;()",id:"compileschemavalidatorss-extends-strictrjsfschema--rjsfschema",level:3},{value:"Parameters",id:"parameters-1",level:4},{value:"createPrecompiledValidator&lt;T = any, S extends StrictRJSFSchema = RJSFSchema, F extends FormContextType = any&gt;()",id:"createprecompiledvalidatort--any-s-extends-strictrjsfschema--rjsfschema-f-extends-formcontexttype--any",level:3},{value:"Parameters",id:"parameters-2",level:4},{value:"Returns",id:"returns-1",level:4}];function l(e){const t={a:"a",blockquote:"blockquote",code:"code",h1:"h1",h2:"h2",h3:"h3",h4:"h4",header:"header",li:"li",p:"p",ul:"ul",...(0,s.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(t.header,{children:(0,r.jsx)(t.h1,{id:"rjsfvalidator-ajv8-apis",children:"@rjsf/validator-ajv8 APIs"})}),"\n",(0,r.jsxs)(t.p,{children:["In RJSF version 5, the original, embedded AJV 6 validator implementation from earlier versions was extracted into its own package, ",(0,r.jsx)(t.code,{children:"@rjsf/validator-ajv6"}),", which was immediately deprecated since AJV 6 is no longer getting maintenance updates.\nA new ",(0,r.jsx)(t.code,{children:"@rjsf/validator-ajv8"})," package was added that uses the AJV 8 package, including adding support for using precompiled validators.\nBelow are the exported API functions that are provided by this package.\nSee the ",(0,r.jsx)(t.a,{href:"/react-jsonschema-form/docs/version-5.24.10/usage/validation",children:"Validation documentation"})," for examples of using these APIs."]}),"\n",(0,r.jsx)(t.h2,{id:"types",children:"Types"}),"\n",(0,r.jsxs)(t.p,{children:["There are a few Typescript types that are exported by ",(0,r.jsx)(t.code,{children:"@rjsf/validator-ajv8"})," in support of the APIs."]}),"\n",(0,r.jsxs)(t.p,{children:["These types can be found on GitHub ",(0,r.jsx)(t.a,{href:"https://github.com/rjsf-team/react-jsonschema-form/blob/main/packages/validator-ajv8/src/types.ts",children:"here"}),"."]}),"\n",(0,r.jsx)(t.h2,{id:"apis",children:"APIs"}),"\n",(0,r.jsx)(t.h3,{id:"customizevalidatort--any-s-extends-strictrjsfschema--rjsfschema-f-extends-formcontexttype--any",children:"customizeValidator<T = any, S extends StrictRJSFSchema = RJSFSchema, F extends FormContextType = any>()"}),"\n",(0,r.jsxs)(t.p,{children:["Creates and returns a customized implementation of the ",(0,r.jsx)(t.code,{children:"ValidatorType"})," with the given customization ",(0,r.jsx)(t.code,{children:"options"})," if provided.\nIf a ",(0,r.jsx)(t.code,{children:"localizer"})," is provided, it is used to translate the messages generated by the underlying AJV validation."]}),"\n",(0,r.jsx)(t.h4,{id:"parameters",children:"Parameters"}),"\n",(0,r.jsxs)(t.ul,{children:["\n",(0,r.jsxs)(t.li,{children:["[options=","]: CustomValidatorOptionsType - The optional map of ",(0,r.jsx)(t.code,{children:"CustomValidatorOptionsType"})," options that are used to create the ",(0,r.jsx)(t.code,{children:"ValidatorType"})," instance"]}),"\n",(0,r.jsxs)(t.li,{children:["[localizer]: Localizer | undefined - If provided, is used to localize a list of Ajv ",(0,r.jsx)(t.code,{children:"ErrorObject"}),"s after running the form validation using AJV"]}),"\n"]}),"\n",(0,r.jsx)(t.h4,{id:"returns",children:"Returns"}),"\n",(0,r.jsxs)(t.ul,{children:["\n",(0,r.jsx)(t.li,{children:"AJV8Validator<T, S, F>: The custom validator implementation resulting from the set of parameters provided"}),"\n"]}),"\n",(0,r.jsx)(t.h3,{id:"compileschemavalidatorss-extends-strictrjsfschema--rjsfschema",children:"compileSchemaValidators<S extends StrictRJSFSchema = RJSFSchema>()"}),"\n",(0,r.jsxs)(t.p,{children:["The function used to compile a schema into an output file in the form that allows it to be used as a precompiled validator.\nThe main reasons for using a precompiled validator is reducing code size, improving validation speed and, most importantly, avoiding dynamic code compilation when prohibited by a browser's Content Security Policy.\nFor more information about AJV code compilation see: ",(0,r.jsx)(t.a,{href:"https://ajv.js.org/standalone.html",children:"https://ajv.js.org/standalone.html"})]}),"\n",(0,r.jsx)(t.h4,{id:"parameters-1",children:"Parameters"}),"\n",(0,r.jsxs)(t.ul,{children:["\n",(0,r.jsx)(t.li,{children:"schema: S - The schema to be compiled into a set of precompiled validators functions"}),"\n",(0,r.jsx)(t.li,{children:"output: string - The name of the file into which the precompiled validator functions will be generated"}),"\n",(0,r.jsxs)(t.li,{children:["[options=","]: CustomValidatorOptionsType - The set of ",(0,r.jsx)(t.code,{children:"CustomValidatorOptionsType"})," information used to alter the AJV validator used for compiling the schema. They are the same options that are passed to the ",(0,r.jsx)(t.code,{children:"customizeValidator()"})," function in order to modify the behavior of the regular AJV-based validator."]}),"\n"]}),"\n",(0,r.jsx)(t.h3,{id:"createprecompiledvalidatort--any-s-extends-strictrjsfschema--rjsfschema-f-extends-formcontexttype--any",children:"createPrecompiledValidator<T = any, S extends StrictRJSFSchema = RJSFSchema, F extends FormContextType = any>()"}),"\n",(0,r.jsxs)(t.p,{children:["Creates and returns a ",(0,r.jsx)(t.code,{children:"ValidatorType"})," interface that is implemented with a precompiled validator.\nIf a ",(0,r.jsx)(t.code,{children:"localizer"})," is provided, it is used to translate the messages generated by the underlying AJV validation."]}),"\n",(0,r.jsxs)(t.blockquote,{children:["\n",(0,r.jsxs)(t.p,{children:["NOTE: The ",(0,r.jsx)(t.code,{children:"validateFns"})," parameter is an object obtained by importing from a precompiled validation file created via the ",(0,r.jsx)(t.code,{children:"compileSchemaValidators()"})," function."]}),"\n"]}),"\n",(0,r.jsx)(t.h4,{id:"parameters-2",children:"Parameters"}),"\n",(0,r.jsxs)(t.ul,{children:["\n",(0,r.jsxs)(t.li,{children:["validateFns: ValidatorFunctions - The map of the validation functions that are created by the ",(0,r.jsx)(t.code,{children:"compileSchemaValidators()"})," function"]}),"\n",(0,r.jsxs)(t.li,{children:["rootSchema: S - The root schema that was used with the ",(0,r.jsx)(t.code,{children:"compileSchemaValidators()"})," function"]}),"\n",(0,r.jsxs)(t.li,{children:["[localizer]: Localizer | undefined - If provided, is used to localize a list of Ajv ",(0,r.jsx)(t.code,{children:"ErrorObject"}),"s after running the form validation using AJV"]}),"\n"]}),"\n",(0,r.jsx)(t.h4,{id:"returns-1",children:"Returns"}),"\n",(0,r.jsxs)(t.ul,{children:["\n",(0,r.jsx)(t.li,{children:"ValidatorType<T, S, F>: The precompiled validator implementation resulting from the set of parameters provided"}),"\n"]})]})}function h(e={}){const{wrapper:t}={...(0,s.R)(),...e.components};return t?(0,r.jsx)(t,{...e,children:(0,r.jsx)(l,{...e})}):l(e)}}}]);