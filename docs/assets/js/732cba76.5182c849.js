"use strict";(self.webpackChunk_rjsf_docs=self.webpackChunk_rjsf_docs||[]).push([[6804],{1184:(e,n,s)=>{s.d(n,{R:()=>o,x:()=>a});var r=s(4041);const t={},i=r.createContext(t);function o(e){const n=r.useContext(i);return r.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function a(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(t):e.components||t:o(e.components),r.createElement(i.Provider,{value:n},e.children)}},1736:(e,n,s)=>{s.r(n),s.d(n,{assets:()=>c,contentTitle:()=>a,default:()=>h,frontMatter:()=>o,metadata:()=>r,toc:()=>d});const r=JSON.parse('{"id":"usage/definitions","title":"Schema definitions and references","description":"This library partially supports inline schema definition dereferencing, which is Barbarian for avoiding to copy and paste commonly used field schemas:","source":"@site/versioned_docs/version-3.2.1/usage/definitions.md","sourceDirName":"usage","slug":"/usage/definitions","permalink":"/react-jsonschema-form/docs/version-3.2.1/usage/definitions","draft":false,"unlisted":false,"editUrl":"https://github.com/rjsf-team/react-jsonschema-form/tree/main/packages/docs/versioned_docs/version-3.2.1/usage/definitions.md","tags":[],"version":"3.2.1","frontMatter":{},"sidebar":"docs","previous":{"title":"Arrays","permalink":"/react-jsonschema-form/docs/version-3.2.1/usage/arrays"},"next":{"title":"Dependencies","permalink":"/react-jsonschema-form/docs/version-3.2.1/usage/dependencies"}}');var t=s(1085),i=s(1184);const o={},a="Schema definitions and references",c={},d=[];function f(e){const n={a:"a",code:"code",em:"em",h1:"h1",header:"header",p:"p",pre:"pre",...(0,i.R)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(n.header,{children:(0,t.jsx)(n.h1,{id:"schema-definitions-and-references",children:"Schema definitions and references"})}),"\n",(0,t.jsxs)(n.p,{children:["This library partially supports ",(0,t.jsx)(n.a,{href:"http://json-schema.org/draft/2019-09/json-schema-core.html#ref",children:"inline schema definition dereferencing"}),", which is Barbarian for ",(0,t.jsx)(n.em,{children:"avoiding to copy and paste commonly used field schemas"}),":"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-jsx",children:'const schema = {\n  "definitions": {\n    "address": {\n      "type": "object",\n      "properties": {\n        "street_address": { "type": "string" },\n        "city":           { "type": "string" },\n        "state":          { "type": "string" }\n      },\n      "required": ["street_address", "city", "state"]\n    }\n  },\n  "type": "object",\n  "properties": {\n    "billing_address": { "$ref": "#/definitions/address" },\n    "shipping_address": { "$ref": "#/definitions/address" }\n  }\n};\n\nrender((\n  <Form schema={schema} />\n), document.getElementById("app"));\n'})}),"\n",(0,t.jsxs)(n.p,{children:["Note that this library only supports local definition referencing. The value in the ",(0,t.jsx)(n.code,{children:"$ref"})," keyword should be a ",(0,t.jsx)(n.a,{href:"https://tools.ietf.org/html/rfc6901",children:"JSON Pointer"})," in URI fragment identifier format."]})]})}function h(e={}){const{wrapper:n}={...(0,i.R)(),...e.components};return n?(0,t.jsx)(n,{...e,children:(0,t.jsx)(f,{...e})}):f(e)}}}]);