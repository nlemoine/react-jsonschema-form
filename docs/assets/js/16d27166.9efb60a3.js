"use strict";(self.webpackChunk_rjsf_docs=self.webpackChunk_rjsf_docs||[]).push([[1980],{1184:(e,n,t)=>{t.d(n,{R:()=>o,x:()=>a});var i=t(4041);const r={},s=i.createContext(r);function o(e){const n=i.useContext(s);return i.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function a(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:o(e.components),i.createElement(s.Provider,{value:n},e.children)}},2722:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>c,contentTitle:()=>a,default:()=>h,frontMatter:()=>o,metadata:()=>i,toc:()=>l});const i=JSON.parse('{"id":"api-reference/themes/semantic-ui/uiSchema","title":"Semantic-UI Customization","description":"There are various options to pass to semantic theme fields.","source":"@site/versioned_docs/version-5.24.10/api-reference/themes/semantic-ui/uiSchema.md","sourceDirName":"api-reference/themes/semantic-ui","slug":"/api-reference/themes/semantic-ui/uiSchema","permalink":"/react-jsonschema-form/docs/version-5.24.10/api-reference/themes/semantic-ui/uiSchema","draft":false,"unlisted":false,"editUrl":"https://github.com/rjsf-team/react-jsonschema-form/tree/main/packages/docs/versioned_docs/version-5.24.10/api-reference/themes/semantic-ui/uiSchema.md","tags":[],"version":"5.24.10","frontMatter":{},"sidebar":"docs","previous":{"title":"Chakra-UI Customization","permalink":"/react-jsonschema-form/docs/version-5.24.10/api-reference/themes/chakra-ui/uiSchema"},"next":{"title":"uiSchema","permalink":"/react-jsonschema-form/docs/version-5.24.10/api-reference/uiSchema"}}');var r=t(1085),s=t(1184);const o={},a="Semantic-UI Customization",c={},l=[{value:"Semantic Widget Optional Properties",id:"semantic-widget-optional-properties",level:4},{value:"errorOptions",id:"erroroptions",level:2},{value:"semantic options uiSchema for array items",id:"semantic-options-uischema-for-array-items",level:2},{value:"formContext",id:"formcontext",level:2}];function m(e){const n={a:"a",blockquote:"blockquote",code:"code",h1:"h1",h2:"h2",h4:"h4",header:"header",li:"li",p:"p",pre:"pre",ul:"ul",...(0,s.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(n.header,{children:(0,r.jsx)(n.h1,{id:"semantic-ui-customization",children:"Semantic-UI Customization"})}),"\n",(0,r.jsx)(n.p,{children:"There are various options to pass to semantic theme fields."}),"\n",(0,r.jsxs)(n.p,{children:["Note that every semantic property within uiSchema can be rendered in one of two ways: ",(0,r.jsx)(n.code,{children:'{"ui:options": {semantic:{[property]: [value]}}}'})]}),"\n",(0,r.jsx)(n.p,{children:"In other words, the following uiSchema is equivalent:"}),"\n",(0,r.jsxs)(n.blockquote,{children:["\n",(0,r.jsx)(n.p,{children:"Note: All fields have the following settings below as their default"}),"\n"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{children:"fluid: Take on the size of its container.\ninverted: Format to appear on dark backgrounds.\n"})}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-json",children:'{\n  "ui:options": {\n    "semantic": {\n      "fluid": true,\n      "inverted": false,\n      "errorOptions": {\n        "size": "small",\n        "pointing": "above"\n      }\n    }\n  }\n}\n'})}),"\n",(0,r.jsx)(n.h4,{id:"semantic-widget-optional-properties",children:"Semantic Widget Optional Properties"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:(0,r.jsx)(n.a,{href:"https://react.semantic-ui.com/elements/input/",children:"Semantic props for TextWidget"})}),"\n",(0,r.jsx)(n.li,{children:(0,r.jsx)(n.a,{href:"https://react.semantic-ui.com/modules/checkbox/",children:"Semantic props for CheckboxWidget"})}),"\n",(0,r.jsx)(n.li,{children:(0,r.jsx)(n.a,{href:"https://react.semantic-ui.com/modules/dropdown/",children:"Semantic props for SelectWidget"})}),"\n",(0,r.jsx)(n.li,{children:(0,r.jsx)(n.a,{href:"https://react.semantic-ui.com/elements/input/",children:"Semantic props for RangeWidget"})}),"\n",(0,r.jsx)(n.li,{children:(0,r.jsx)(n.a,{href:"https://react.semantic-ui.com/addons/radio/",children:"Semantic props for RadioWidget"})}),"\n",(0,r.jsx)(n.li,{children:(0,r.jsx)(n.a,{href:"https://react.semantic-ui.com/elements/input/",children:"Semantic props for PasswordWidget"})}),"\n",(0,r.jsx)(n.li,{children:(0,r.jsx)(n.a,{href:"https://react.semantic-ui.com/elements/input/",children:"Semantic props for UpDownWidget"})}),"\n",(0,r.jsx)(n.li,{children:(0,r.jsx)(n.a,{href:"https://react.semantic-ui.com/addons/text-area/",children:"Semantic props for TextAreaWidget"})}),"\n"]}),"\n",(0,r.jsx)(n.h2,{id:"erroroptions",children:"errorOptions"}),"\n",(0,r.jsxs)(n.p,{children:["The uiSchema semantic object accepts an ",(0,r.jsx)(n.code,{children:"errorOptions"})," property for each field of the schema:"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{children:"size: determines the size of the error message dialog\npointing: determines the direction of the arrow on the error message dialog\n"})}),"\n",(0,r.jsx)(n.p,{children:"Below are the current defaults"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-tsx",children:"import { UiSchema } from '@rjsf/utils';\n\nconst uiSchema: UiSchema = {\n  'ui:options': {\n    semantic: {\n      errorOptions: {\n        size: 'small',\n        pointing: 'above',\n      },\n    },\n  },\n};\n"})}),"\n",(0,r.jsx)(n.h2,{id:"semantic-options-uischema-for-array-items",children:"semantic options uiSchema for array items"}),"\n",(0,r.jsxs)(n.p,{children:["To specify a uiSchema that applies to array items, specify the semantic uiSchema value within the ",(0,r.jsx)(n.code,{children:"ui:options"})," property:"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{children:"wrapItem: wrap each array item in a Segment\nhorizontalButtons: vertical buttons instead of the default horizontal\n"})}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-tsx",children:"import { RJSFSchema, UiSchema } from '@rjsf/utils';\nimport validator from '@rjsf/validator-ajv8';\n\nconst schema: RJSFSchema = {\n  type: 'array',\n  items: {\n    type: 'string',\n  },\n};\n\nconst uiSchema: UiSchema = {\n  'ui:options': {\n    semantic: {\n      wrapItem: true,\n      horizontalButtons: false,\n    },\n  },\n};\n\nrender(<Form schema={schema} uiSchema={uiSchema} validator={validator} />, document.getElementById('app'));\n"})}),"\n",(0,r.jsx)(n.h2,{id:"formcontext",children:"formContext"}),"\n",(0,r.jsxs)(n.p,{children:["The formContext semantic object accepts ",(0,r.jsx)(n.code,{children:"wrapContent"})," ,",(0,r.jsx)(n.code,{children:"wrapLabel"})," properties."]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{children:"wrapContent: wrap all inputs  field content in a div, for custom styling\nwrapLabel: wrap all labels in a div, for custom styling via CSS\n"})}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-tsx",children:"<Form\n  formContext={{\n    semantic: {\n      wrapLabel: true,\n      wrapContent: true,\n    },\n    // other props...\n  }}\n/>\n"})})]})}function h(e={}){const{wrapper:n}={...(0,s.R)(),...e.components};return n?(0,r.jsx)(n,{...e,children:(0,r.jsx)(m,{...e})}):m(e)}}}]);